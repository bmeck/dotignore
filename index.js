var minimatch = require('minimatch');
var path = require('path');

var separators = {
  windows: '\\',
  mac: '/'
};

// One-directional conversion to a standard path separator,
// which we need to get the regular expressions to work in
// a windows environment. The RegExp generated by minimatch 
// appears to default to a Mac OS separator and triggers test 
// failures on a windows machine
function normalizeWindowsPathSeparator(pathName) {
  
  if (pathName.indexOf(separators.windows) !== -1){
    pathName = pathName.split(separators.windows).join(separators.mac);
  }
  
  return pathName;
}
function IgnoreMatcher(str) {
  var negated = this.negated = [];
  var rooted = this.rooted = [];
  this.matchers = [];

  (str.split(/\r?\n|\r/)).forEach(line => {

    var negatedLine = line[0] === '!';
    var rootedLine = line[0] === separators.mac;

    if (negatedLine || rootedLine) {
      line = line.substring(1)
    }

    var matchers = minimatch.makeRe(line, {
      matchBase: !rootedLine,
      negated: true // negated
    });

    // Keep the dimensions of all the arrays consistent 
    // so that the loop index correctly refers to the same
    // line in the gitignore file
    if (matchers) {
      this.matchers.push(matchers);
      var isShellGlob = line.indexOf(separators.mac) >= 0;
      negated[negated.length] = negatedLine;
      rooted[rooted.length] = rootedLine || isShellGlob;
    }
    
  });
  return this;
}

IgnoreMatcher.prototype.delimiter = separators.mac;
IgnoreMatcher.prototype.shouldIgnore = function (filename) {
  filename = normalizeWindowsPathSeparator(filename);
  var isMatching = false;
  for (var i = 0; i < this.matchers.length; i++) {
    var matcher = this.matchers[i];
    if (this.rooted[i]) {
      
      if (matcher.test(filename)) {
        isMatching = !this.negated[i];
      }
    } else 
    if (filename.split(this.delimiter).some(function (part) {
      return matcher.test(part);
    })) {
      isMatching = !this.negated[i];
    }
  }
  return isMatching;
};
exports.createMatcher = function (ignoreFileStr) {
  return new IgnoreMatcher(ignoreFileStr);
};
